#!/usr/bin/python3

import yaml, random, re, sys

config : dict = {}

def loadConfigs():
    global configsfile
    with open(".circleci/configs.yml","rb") as f:
        configsfile = yaml.safe_load(f)

def chooseConfig():
    global config
    pick = configsfile['pick']
    configs = configsfile['configs']
    configkeys = list(configs.keys())
    if pick == 'random':
        i = random.randrange(0, len(configkeys))
        configname = configkeys[i]
    else:
        configname = pick
    config = configs[configname]
    assert 'name' not in config
    print(f"Picking configuration {configname} for Circle CI")
    config['name'] = configname

def makeConfig():
    with open(".circleci/template.yml","rt") as f:
        template = f.read()

    def repl(m) -> str:
        key = m[1]
        if key not in config:
            sys.exit(f"Unknown substitution {m[0]} in template. Allowed keys: {config.keys()}")
        return str(config[key])

    result = re.sub(r"@{([a-zA-Z0-9_]+)}", repl, template)

    with open(".circleci/config.yml", "wt") as f:
        f.write("# Autogenerated from template.yml. Changes will be lost.\n\n")
        f.write(result)

loadConfigs()
chooseConfig()
makeConfig()

